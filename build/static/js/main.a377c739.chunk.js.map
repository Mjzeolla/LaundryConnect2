{"version":3,"sources":["components/layout/Layout.module.css","components/layout/NavBar.js","components/layout/Layout.js","components/machineInformation/DryerItem.js","components/machineInformation/WasherItem.js","components/machineInformation/MachineList.js","store/favoriteContext.js","components/BuildingInformation/AcordianItem.js","components/BuildingInformation/BuildingList.js","components/WelcomeMessage.js","modals/LoginPage.js","modals/RegisterPage.js","modals/GetUsernameComponent.js","modals/MyAccountPage.js","App.js","store/loginStore.js","index.js"],"names":["module","exports","NavBar","props","React","anchorEl","setAnchorEl","console","log","loggedIn","handleMenu","event","currentTarget","Box","sx","flexGrow","AppBar","position","Toolbar","Typography","variant","component","style","cursor","onClick","IconButton","size","color","Menu","id","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","Boolean","onClose","MenuItem","handleRegister","handleLogin","Link","to","handleLogout","Layout","className","calsses","main","children","yellow","red","black","DryerItem","value","status","dryerColor","item","minutes_left","Card","height","display","flexDirection","boxShadow","CardContent","alignItems","flexWrap","gutterBottom","machinenumber","minWidth","paddingfontsize","WasherItem","washerColor","MachineList","Container","py","maxWidth","Grid","container","spacing","washerInfo","map","index","md","sm","xs","show","hide","onHide","dryerInfo","ContactsContext","createContext","contacts","addContactHandler","contact","removeContactHandler","contactId","getContactHandler","editContactHandler","ContactsContextProvider","useState","loadedData","setData","useEffect","fetch","method","then","response","json","data","context","periousContacts","concat","filter","find","element","_id","x","removeAll","Provider","Accordion","styled","disableGutters","elevation","square","theme","border","palette","divider","borderBottom","AccordionSummary","expandIcon","fontSize","backgroundColor","mode","transform","marginLeft","AccordionDetails","MuiAccordionDetails","padding","borderTop","addFavorite","credentials","a","headers","body","JSON","stringify","removeFavorite","getColor","AccordianItem","washeravailable_percent","dryeravailable_percent","favorite","setFav","handleAddFavorite","e","preventDefault","stopPropagation","favoriteItem","fav","humanname","token","failed","handleRemoveFavorite","expanded","onChange","handleChange","direction","washers","dryers","BuildingList","favoriteContext","useContext","setExpanded","panel","newExpanded","showFavorites","filteredData","includes","WelcomeMessage","timestring","timestamp","lu","Date","toLocaleString","navigator","language","year","month","day","hour","minute","m","List","ListItem","ToggleButtonGroup","alignment","exclusive","newAlignment","setAlignment","ToggleButton","setFavorites","BootstrapDialogTitle","other","DialogTitle","p","right","top","grey","RedTypography","withStyles","root","loginUser","LoginPage","prop","amount","password","weight","weightRange","showPassword","values","setValues","inputError","setError","usernameRef","passwordRef","handleSubmit","u","current","loginData","setToken","handleClose","handleFavorite","favoriteButton","Dialog","fullWidth","loginOpen","DialogContent","dividers","mr","my","TextField","autoFocus","inputRef","margin","label","type","FormControl","InputLabel","htmlFor","Input","required","target","endAdornment","InputAdornment","onMouseDown","DialogActions","Button","registerUser","RegisterPage","existsError","setExistsError","emptyError","setEmptyError","emailRef","registerData","registerOpen","mt","getUsername","username","GetUsernameComponent","loading","setLoading","updateUsername","createTheme","primary","MyAccountPage","changePassword","FormData","get","trim","setState","success","emptyPassword","changePasswordRequest","newPassword","passwordInput","ThemeProvider","justifyContent","noValidate","onSubmit","this","mx","mb","textAlign","name","state","App","tokenString","sessionStorage","getItem","userToken","parse","getToken","setItem","useToken","laundryData","timestampData","setTimestampData","openLogin","setOpenLogin","openRegister","setOpenRegister","setShowFavorites","now","time","setTime","logoutUser","interval","setInterval","clearInterval","splice","length","handleClickOpenLogout","result","path","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a377c739.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__1j2i1\"};","import * as React from \"react\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\n\r\nimport AccountCircle from \"@mui/icons-material/AccountCircle\";\r\n\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport Menu from \"@mui/material/Menu\";\r\n\r\nimport {Link} from 'react-router-dom'\r\n\r\nfunction NavBar(props) {\r\n  const [auth, setAuth] = React.useState(false)\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  console.log(\"Our login status: \" + props.loggedIn);\r\n\r\n\r\n  const handleChange = (event) => {\r\n    setAuth(event.target.checked);\r\n  };\r\n\r\n  const handleMenu = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleLogin = () => {\r\n    props.handleLogin();\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    props.handleLogout();\r\n    setAnchorEl(null);\r\n  }\r\n\r\n  const handleRegister = () => {\r\n    props.handleRegister();\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ flexGrow: 1 }}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\r\n            Laundry Connect 2.0\r\n          </Typography>\r\n\r\n          <div>\r\n            <span style={{ cursor: \"pointer\" }} onClick={handleMenu}>\r\n              {\" \"}\r\n              Account Details{\" \"}\r\n            </span>\r\n            <IconButton\r\n              size=\"large\"\r\n              aria-label=\"account of current user\"\r\n              aria-controls=\"menu-appbar\"\r\n              aria-haspopup=\"true\"\r\n              onClick={handleMenu}\r\n              color=\"inherit\"\r\n            >\r\n              <AccountCircle />\r\n            </IconButton>\r\n            <Menu\r\n              id=\"menu-appbar\"\r\n              anchorEl={anchorEl}\r\n              anchorOrigin={{\r\n                vertical: \"top\",\r\n                horizontal: \"right\",\r\n              }}\r\n              keepMounted\r\n              transformOrigin={{\r\n                vertical: \"top\",\r\n                horizontal: \"right\",\r\n              }}\r\n              open={Boolean(anchorEl)}\r\n              onClose={handleClose}\r\n            >\r\n              {!props.loggedIn && (\r\n                <div>\r\n                  <MenuItem onClick={handleRegister}>Register</MenuItem>\r\n                  <MenuItem onClick={handleLogin}>Sign In</MenuItem>\r\n                </div>\r\n              )}\r\n\r\n              {props.loggedIn && (\r\n                <div>\r\n                  <MenuItem component={Link} to=\"/myAccount\">My Account</MenuItem>\r\n                  <MenuItem component={Link} to=\"/\" onClick={handleLogout}>Sign Out</MenuItem>\r\n                </div>\r\n              )}\r\n            </Menu>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </Box>\r\n  );\r\n}\r\nexport default NavBar;\r\n","import NavBar from \"./NavBar\";\r\nimport calsses from \"./Layout.module.css\";\r\n\r\nimport * as React from \"react\";\r\n\r\nfunction Layout(props) {\r\n  return (\r\n    <div>\r\n      <div>\r\n        <NavBar\r\n          handleRegister={props.handleRegister}\r\n          handleLogin={props.handleLogin}\r\n          loggedIn={props.loggedIn}\r\n          handleLogout={props.handleLogout}\r\n        />\r\n      </div>\r\n      <main className={calsses.main}>{props.children}</main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Layout;\r\n","import { Typography, Card, CardContent } from \"@mui/material\";\r\nimport CircleIcon from \"@mui/icons-material/Circle\";\r\nimport LocalLaundryServiceIcon from \"@mui/icons-material/LocalLaundryService\";\r\nimport DryCleaningTwoToneIcon from \"@mui/icons-material/DryCleaningTwoTone\";\r\n\r\nvar orange = \"fdb996\";\r\nvar yellow = \"#fdec96\";\r\nvar red = \"#fc647d\";\r\nvar green = \"#90ee90\";\r\nvar black = \"#000000\";\r\n\r\nfunction getColor(value, status) {\r\n  if (value === null && status === \"Ready For Pickup\") return yellow;\r\n  else if (status === \"Available\") return green;\r\n  else if (status === \"Offline\") return black;\r\n  else if (value === null && status === \"Ready To Start\") return red;\r\n  else if (value >= 35) return red;\r\n  else if (value >= 15) return orange;\r\n  else if (value >= 0) return yellow;\r\n  else if (status === \"Offline\") return black;\r\n  else return black;\r\n}\r\n\r\nfunction DryerItem(props) {\r\n  const dryerColor = getColor(props.item.minutes_left, props.item.status);\r\n\r\n  return (\r\n    <Card\r\n      sx={{\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        boxShadow: 3,\r\n      }}\r\n    >\r\n      <CardContent sx={{ flexGrow: 1 }}>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            flexWrap: \"wrap\",\r\n          }}\r\n        >\r\n          <Typography gutterBottom variant=\"h6\">\r\n            Dryer - #{props.item.machinenumber}\r\n          </Typography>\r\n          <DryCleaningTwoToneIcon\r\n            style={{ minWidth: \"120px\" }}\r\n            paddingfontsize=\"large\"\r\n          />\r\n          {/* <DryCleaningTwoToneIcon\r\n            style={{ minWidth: \"40px\" }}\r\n            paddingfontsize=\"large\"\r\n          /> */}\r\n        </div>\r\n\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            flexWrap: \"wrap\",\r\n          }}\r\n        >\r\n          <CircleIcon\r\n            paddingfontsize=\"small\"\r\n            style={{ minWidth: \"40px\", color: dryerColor }}\r\n          />\r\n\r\n          <span> {props.item.status} </span>\r\n          {props.item.minutes_left !== null && (\r\n            <span> : {props.item.minutes_left} Minutes</span>\r\n          )}\r\n        </div>\r\n      </CardContent>\r\n      {/* <CardActions>\r\n        <Button size=\"small\">View</Button>\r\n        <Button size=\"small\">Edit</Button>\r\n      </CardActions> */}\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default DryerItem;\r\n","import { Typography, Card, CardContent } from \"@mui/material\";\r\nimport CircleIcon from \"@mui/icons-material/Circle\";\r\nimport LocalLaundryServiceIcon from \"@mui/icons-material/LocalLaundryService\";\r\nimport DryCleaningTwoToneIcon from \"@mui/icons-material/DryCleaningTwoTone\";\r\n\r\nvar orange = \"fdb996\"\r\nvar yellow = \"#fdec96\"\r\nvar red = \"#fc647d\"\r\nvar green = \"#90ee90\"\r\nvar black = \"#000000\"\r\n\r\n\r\nfunction getColor(value, status) {\r\n  if (value === null && status === \"Ready For Pickup\") return yellow;\r\n  else if (status === \"Available\") return green;\r\n  else if (status === \"Offline\") return black;\r\n  else if (value === null && status === \"Ready To Start\") return red;\r\n  else if (value >= 20) return red;\r\n  else if (value >= 10) return orange;\r\n  else if (value >= 0) return yellow;\r\n  else if (status === \"Offline\") return black;\r\n  else return black;\r\n}\r\n\r\nfunction WasherItem(props) {\r\n  const washerColor = getColor(props.item.minutes_left, props.item.status);\r\n\r\n  return (\r\n    <Card sx={{ height: \"100%\", display: \"flex\", flexDirection: \"column\", boxShadow: 3 }}>\r\n      <CardContent sx={{ flexGrow: 1 }}>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            flexWrap: \"wrap\",\r\n          }}\r\n        >\r\n          <Typography gutterBottom variant=\"h6\">\r\n            Washer - #{props.item.machinenumber}\r\n          </Typography>\r\n          <LocalLaundryServiceIcon\r\n            style={{ minWidth: \"100px\" }}\r\n            paddingfontsize=\"small\"\r\n          />\r\n          {/* <DryCleaningTwoToneIcon\r\n            style={{ minWidth: \"40px\" }}\r\n            paddingfontsize=\"large\"\r\n          /> */}\r\n        </div>\r\n\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            flexWrap: \"wrap\",\r\n          }}\r\n        >\r\n          <CircleIcon\r\n            paddingfontsize=\"small\"\r\n            style={{ minWidth: \"40px\", color: washerColor }}\r\n          />\r\n         \r\n          <span> {props.item.status} </span>\r\n          {(props.item.minutes_left !== null) && <span>  : { props.item.minutes_left}  Minutes</span>}\r\n          \r\n        </div>\r\n      </CardContent>\r\n      {/* <CardActions>\r\n        <Button size=\"small\">View</Button>\r\n        <Button size=\"small\">Edit</Button>\r\n      </CardActions> */}\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default WasherItem;\r\n","import DryerItem from \"./DryerItem\";\r\nimport WasherItem from \"./WasherItem\";\r\nimport { Container, Grid } from \"@mui/material\";\r\n\r\nfunction MachineList(props) {\r\n  return (\r\n    <Container sx={{ py: 4 }} maxWidth=\"lg\">\r\n      <Grid container spacing={3}>\r\n        {props.washerInfo.map((item, index) => (\r\n          <Grid item key={index} md={3} sm={6} xs={12}>\r\n            <WasherItem\r\n              show={props.show}\r\n              hide={props.onHide}\r\n              key={index + 1}\r\n              index={index + 1}\r\n              item={item}\r\n            />\r\n          </Grid>\r\n        ))}\r\n\r\n        {props.dryerInfo.map((item, index) => (\r\n          <Grid item key={index} md={3} sm={6} xs={12}>\r\n            <DryerItem\r\n              show={props.show}\r\n              hide={props.onHide}\r\n              key={index + 1}\r\n              index={index + 1}\r\n              item={item}\r\n            />\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default MachineList;\r\n","import { createContext, useState, useEffect } from \"react\";\r\n\r\nconst ContactsContext = createContext({\r\n  contacts: [],\r\n  addContactHandler: (contact) => {},\r\n  removeContactHandler: (contactId) => {},\r\n  getContactHandler: (id) => {},\r\n  editContactHandler: (contact) => {},\r\n});\r\n\r\nexport function ContactsContextProvider(props) {\r\n  const [loadedData, setData] = useState([]);\r\n  useEffect(() => {\r\n    fetch(\"/favBuildings\", {\r\n      method: \"GET\",\r\n    })\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        setData(data);\r\n      });\r\n  }, []);\r\n\r\n  const context = {\r\n    contacts: loadedData,\r\n    addContactHandler,\r\n    removeContactHandler,\r\n    getContactHandler,\r\n    editContactHandler,\r\n    removeAll,\r\n  };\r\n\r\n  function addContactHandler(contact) {\r\n    setData((periousContacts) => {\r\n      return periousContacts.concat(contact);\r\n    });\r\n  }\r\n\r\n  function removeAll() {\r\n    setData([]);\r\n  }\r\n\r\n  function getContactHandler(id) {\r\n    let obj = loadedData.find((element) => element._id === id);\r\n    return obj;\r\n  }\r\n\r\n  function removeContactHandler(contactId) {\r\n    setData((periousContacts) => {\r\n      return periousContacts.filter((contact) => contact !== contactId);\r\n    });\r\n  }\r\n\r\n  function editContactHandler(contact) {\r\n    setData((periousContacts) => {\r\n      return periousContacts.map((x) => (x._id === contact._id ? contact : x));\r\n    });\r\n  }\r\n\r\n  return (\r\n    <ContactsContext.Provider value={context}>\r\n      {props.children}\r\n    </ContactsContext.Provider>\r\n  );\r\n}\r\n\r\nexport default ContactsContext;\r\n","import MuiAccordion from \"@mui/material/Accordion\";\r\nimport MuiAccordionSummary from \"@mui/material/AccordionSummary\";\r\nimport MuiAccordionDetails from \"@mui/material/AccordionDetails\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { Grid, Container } from \"@mui/material\";\r\nimport * as React from \"react\";\r\n\r\nimport StarOutlineIcon from \"@mui/icons-material/StarOutline\";\r\nimport StarRateIcon from \"@mui/icons-material/StarRate\";\r\n\r\nimport CircleIcon from \"@mui/icons-material/Circle\";\r\n\r\nimport { styled } from \"@mui/material/styles\";\r\nimport ArrowForwardIosSharpIcon from \"@mui/icons-material/ArrowForwardIosSharp\";\r\nimport MachineList from \"../machineInformation/MachineList\";\r\n\r\nimport ContactsContext from \"../../store/favoriteContext\";\r\n\r\nimport { useState, useContext } from \"react\";\r\n\r\nconst Accordion = styled((props) => (\r\n  <MuiAccordion disableGutters elevation={0} square {...props} />\r\n))(({ theme }) => ({\r\n  border: `1px solid ${theme.palette.divider}`,\r\n  \"&:not(:last-child)\": {\r\n    borderBottom: 0,\r\n  },\r\n  \"&:before\": {\r\n    display: \"none\",\r\n  },\r\n}));\r\n\r\nconst AccordionSummary = styled((props) => (\r\n  <MuiAccordionSummary\r\n    expandIcon={<ArrowForwardIosSharpIcon sx={{ fontSize: \"0.9rem\" }} />}\r\n    {...props}\r\n  />\r\n))(({ theme }) => ({\r\n  backgroundColor:\r\n    theme.palette.mode === \"dark\"\r\n      ? \"rgba(255, 255, 255, .05)\"\r\n      : \"rgba(0, 0, 0, .03)\",\r\n  flexDirection: \"row-reverse\",\r\n  \"& .MuiAccordionSummary-expandIconWrapper.Mui-expanded\": {\r\n    transform: \"rotate(90deg)\",\r\n  },\r\n  \"& .MuiAccordionSummary-content\": {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst AccordionDetails = styled(MuiAccordionDetails)(({ theme }) => ({\r\n  padding: theme.spacing(2),\r\n  borderTop: \"1px solid rgba(0, 0, 0, .125)\",\r\n}));\r\n\r\nasync function addFavorite(credentials) {\r\n  return fetch(\"/addFavorite\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(credentials),\r\n  }).then((data) => data.json());\r\n}\r\n\r\nasync function removeFavorite(credentials) {\r\n  return fetch(\"/delFavorite\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(credentials),\r\n  }).then((data) => data.json());\r\n}\r\n\r\nfunction getColor(value) {\r\n  if (value >= 75) return \"#90ee90\";\r\n  else if (value >= 50) return \"#fdec96\";\r\n  else if (value >= 25) return \"#fdb996\";\r\n  else if (value >= 0) return \"#fc647d\";\r\n  else return \"#000000\";\r\n}\r\n\r\nfunction AccordianItem(props) {\r\n  const washerColor = getColor(props.item.washeravailable_percent);\r\n  const dryerColor = getColor(props.item.dryeravailable_percent);\r\n\r\n  console.log(\"favorite: \" + props.favorite);\r\n  const [isFav, setFav] = React.useState(props.favorite);\r\n\r\n  const handleAddFavorite = async (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n\r\n    const favoriteItem = {\r\n      fav: props.item.humanname,\r\n    };\r\n\r\n    const token = await addFavorite(favoriteItem);\r\n    console.log(token.failed);\r\n    if (token.failed === \"false\") {\r\n      setFav(true);\r\n      props.addContactHandler(props.item.humanname);\r\n    }\r\n  };\r\n\r\n  const handleRemoveFavorite = async (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    const favoriteItem = {\r\n      fav: props.item.humanname,\r\n    };\r\n\r\n    const token = await removeFavorite(favoriteItem);\r\n    console.log(token.failed);\r\n    if (token.failed === \"false\") {\r\n      props.removeContactHandler(props.item.humanname);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Accordion\r\n        expanded={props.expanded === \"panel\" + props.index}\r\n        onChange={props.handleChange(\"panel\" + props.index)}\r\n      >\r\n        <AccordionSummary aria-controls=\"panel1d-content\" id=\"panel1d-header\">\r\n          <Grid container direction={\"row\"} spacing={2}>\r\n            <Grid item xs={3} sm={3}>\r\n              <Typography>{props.item.humanname}</Typography>{\" \"}\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <div style={{ display: \"inline-flex\" }}>\r\n                <CircleIcon fontSize=\"small\" style={{ color: washerColor }} />\r\n                &nbsp;\r\n                <Typography>\r\n                  <span>\r\n                    {props.item.washeravailable_percent}% Washers Available\r\n                  </span>\r\n                </Typography>\r\n              </div>\r\n            </Grid>\r\n            <Grid item xs={3} sm={4}>\r\n              <div style={{ display: \"inline-flex\" }}>\r\n                <CircleIcon fontSize=\"small\" style={{ color: dryerColor }} />\r\n                &nbsp;\r\n                <Typography>\r\n                  <span>\r\n                    {props.item.dryeravailable_percent}% Dryers Available\r\n                  </span>\r\n                </Typography>\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item>\r\n            {!props.favorite && (\r\n              <StarOutlineIcon onClick={handleAddFavorite} fontSize=\"small\" />\r\n            )}\r\n            {props.favorite && (\r\n              <StarRateIcon onClick={handleRemoveFavorite} fontSize=\"small\" />\r\n            )}\r\n          </Grid>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n          <MachineList\r\n            washerInfo={props.item.washers}\r\n            dryerInfo={props.item.dryers}\r\n          />\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AccordianItem;\r\n","import AccordianItem from \"./AcordianItem\";\r\nimport ContactsContext from \"../../store/favoriteContext\";\r\nimport { useState, useContext } from \"react\";\r\n\r\nfunction BuildingList(props) {\r\n  const favoriteContext = useContext(ContactsContext);\r\n  const [expanded, setExpanded] = useState(\"\");\r\n\r\n  const handleChange = (panel) => (event, newExpanded) => {\r\n    setExpanded(newExpanded ? panel : false);\r\n  };\r\n\r\n  if (!props.showFavorites) {\r\n    return (\r\n      <div>\r\n        {props.data.map((item, index) => {\r\n          return (\r\n            <AccordianItem\r\n              expanded={expanded}\r\n              handleChange={handleChange}\r\n              show={props.show}\r\n              hide={props.onHide}\r\n              key={index + 1}\r\n              index={index + 1}\r\n              item={item}\r\n              favorite={favoriteContext.contacts.includes(item.humanname)}\r\n              removeContactHandler={favoriteContext.removeContactHandler}\r\n              addContactHandler={favoriteContext.addContactHandler}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  } else {\r\n    const rawData = props.data;\r\n    const filteredData = rawData.filter((item) =>\r\n      favoriteContext.contacts.includes(item.humanname)\r\n    );\r\n\r\n    return (\r\n      <div>\r\n        {filteredData.map((item, index) => {\r\n          console.log(favoriteContext.contacts);\r\n          return (\r\n            <AccordianItem\r\n              expanded={expanded}\r\n              handleChange={handleChange}\r\n              show={props.show}\r\n              hide={props.onHide}\r\n              key={index + 1}\r\n              index={index + 1}\r\n              item={item}\r\n              favorite={favoriteContext.contacts.includes(item.humanname)}\r\n              removeContactHandler={favoriteContext.removeContactHandler}\r\n              addContactHandler={favoriteContext.addContactHandler}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BuildingList;\r\n","import {\r\n  Typography,\r\n  Box,\r\n  ToggleButton,\r\n  ToggleButtonGroup,\r\n} from \"@mui/material\";\r\n\r\nimport * as React from \"react\";\r\n\r\nimport Card from \"@mui/material/Card\";\r\nimport CircleIcon from \"@mui/icons-material/Circle\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\n\r\nfunction WelcomeMessage(props) {\r\n  const handleChange = (event, newAlignment) => {\r\n    if (newAlignment !== null) props.setAlignment(newAlignment);\r\n  };\r\n\r\n  console.log(props.timestamp);\r\n  let timestring;\r\n\r\n  try {\r\n    const lu = new Date(props.timestamp[0].timestamp * 1000);\r\n    timestring =\r\n      lu.toLocaleString(navigator.language, {\r\n        year: \"numeric\",\r\n        month: \"long\",\r\n        day: \"numeric\",\r\n      }) +\r\n      \" at \" +\r\n      lu.toLocaleString(navigator.language, {\r\n        hour: \"numeric\",\r\n        minute: \"numeric\",\r\n      });\r\n  } catch (e) {\r\n    timestring = \"Loading...\";\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Box\r\n        sx={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n          \"& > *\": {\r\n            m: 1,\r\n          },\r\n        }}\r\n      >\r\n        <Typography variant=\"h4\">\r\n          <b>Welcome to LaundryConnect 2.0! </b>\r\n        </Typography>\r\n        <Typography variant=\"h6\">\r\n          Because Laundry Connect sucks at web design, and WPI deserves a better\r\n          how-busy-is-the-laundry-room experience.\r\n        </Typography>\r\n\r\n        <Card sx={{ boxShadow: 3 }}>\r\n          <List>\r\n            <div style={{ display: \"inline-flex\" }}>\r\n              <ListItem>\r\n                <CircleIcon fontSize=\"small\" style={{ color: \"#90ee90\" }} />\r\n                &nbsp;\r\n                <Typography>Available</Typography>\r\n              </ListItem>\r\n            </div>\r\n            <div style={{ display: \"inline-flex\" }}>\r\n              <ListItem>\r\n                <CircleIcon fontSize=\"small\" style={{ color: \"#fdec96\" }} />\r\n                &nbsp;\r\n                <Typography>Almost Done</Typography>\r\n              </ListItem>\r\n            </div>\r\n            <div style={{ display: \"inline-flex\" }}>\r\n              <ListItem>\r\n                <CircleIcon fontSize=\"small\" style={{ color: \"#fdb996\" }} />\r\n                &nbsp;\r\n                <Typography>In Use</Typography>\r\n              </ListItem>\r\n            </div>\r\n            <div style={{ display: \"inline-flex\" }}>\r\n              <ListItem>\r\n                <CircleIcon fontSize=\"small\" style={{ color: \"#fc647d\" }} />\r\n                &nbsp;\r\n                <Typography>Just Started</Typography>\r\n              </ListItem>\r\n            </div>\r\n            <div style={{ display: \"inline-flex\" }}>\r\n              <ListItem>\r\n                <CircleIcon fontSize=\"small\" style={{ color: \"#000000\" }} />\r\n                &nbsp;\r\n                <Typography>Out of Order</Typography>\r\n              </ListItem>\r\n            </div>\r\n          </List>\r\n        </Card>\r\n        <Typography variant=\"small\">Last updated: {timestring}</Typography>\r\n        <ToggleButtonGroup\r\n          color=\"primary\"\r\n          value={props.alignment}\r\n          exclusive\r\n          onChange={handleChange}\r\n        >\r\n          <ToggleButton\r\n            onClick={() => {\r\n              props.setFavorites(false);\r\n            }}\r\n            value=\"All\"\r\n          >\r\n            All Locations\r\n          </ToggleButton>\r\n          <ToggleButton\r\n            onClick={() => {\r\n              props.setFavorites(true);\r\n            }}\r\n            value=\"Selected\"\r\n          >\r\n            Favorite Locations\r\n          </ToggleButton>\r\n        </ToggleButtonGroup>\r\n      </Box>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WelcomeMessage;\r\n","import * as React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport AccountCircle from \"@mui/icons-material/AccountCircle\";\r\nimport InputAdornment from \"@mui/material/InputAdornment\";\r\nimport Visibility from \"@mui/icons-material/Visibility\";\r\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport Input from \"@mui/material/Input\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport LockIcon from \"@mui/icons-material/Lock\";\r\n\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { Typography, Box } from \"@mui/material\";\r\n\r\nconst BootstrapDialogTitle = (props) => {\r\n  const { children, onClose, ...other } = props;\r\n\r\n  return (\r\n    <DialogTitle sx={{ m: 0, p: 2 }} {...other}>\r\n      {children}\r\n      {onClose ? (\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          onClick={onClose}\r\n          sx={{\r\n            position: \"absolute\",\r\n            right: 8,\r\n            top: 8,\r\n            color: (theme) => theme.palette.grey[500],\r\n          }}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </DialogTitle>\r\n  );\r\n};\r\n\r\nBootstrapDialogTitle.propTypes = {\r\n  children: PropTypes.node,\r\n  onClose: PropTypes.func.isRequired,\r\n};\r\n\r\nconst RedTypography = withStyles({\r\n  root: {\r\n    color: \"#DC143C\",\r\n  },\r\n})(Typography);\r\n\r\nasync function loginUser(credentials) {\r\n  return fetch(\"/login\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(credentials),\r\n  }).then((data) => data.json());\r\n}\r\n\r\nfunction LoginPage(props) {\r\n  const [values, setValues] = React.useState({\r\n    amount: \"\",\r\n    password: \"\",\r\n    weight: \"\",\r\n    weightRange: \"\",\r\n    showPassword: false,\r\n  });\r\n\r\n  const handleChange = (prop) => (event) => {\r\n    setValues({ ...values, [prop]: event.target.value });\r\n  };\r\n\r\n  const handleClickShowPassword = () => {\r\n    setValues({\r\n      ...values,\r\n      showPassword: !values.showPassword,\r\n    });\r\n  };\r\n\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  const [inputError, setError] = React.useState(false);\r\n  const usernameRef = React.useRef();\r\n  const passwordRef = React.useRef();\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    const u = usernameRef.current.value;\r\n    const p = passwordRef.current.value;\r\n\r\n    const loginData = {\r\n      u,\r\n      p,\r\n    };\r\n\r\n    const token = await loginUser(loginData);\r\n    console.log(token.failed);\r\n    if (token.failed === \"false\") {\r\n      props.setToken(token);\r\n      props.handleClose();\r\n      setError(false);\r\n      props.handleFavorite(true);\r\n      props.favoriteButton(\"Selected\");\r\n    } else {\r\n      setError(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <Dialog\r\n        fullWidth\r\n        maxWidth=\"xs\"\r\n        onClose={props.handleClose}\r\n        open={props.loginOpen}\r\n      >\r\n        <BootstrapDialogTitle onClose={props.handleClose}>\r\n          Sign In\r\n        </BootstrapDialogTitle>\r\n        <DialogContent dividers>\r\n          <Typography gutterBottom>\r\n            <b>Login Credentials:</b>\r\n          </Typography>\r\n\r\n          <Box sx={{ display: \"flex\", alignItems: \"flex-end\" }}>\r\n            <AccountCircle sx={{ color: \"action.active\", mr: 1, my: 0.5 }} />\r\n            <TextField\r\n              autoFocus\r\n              inputRef={usernameRef}\r\n              margin=\"dense\"\r\n              id=\"username standard-required input-with-icon-textfield\"\r\n              label=\"Username\"\r\n              type=\"text\"\r\n              fullWidth\r\n              variant=\"standard\"\r\n            />\r\n          </Box>\r\n          <Box sx={{ display: \"flex\", alignItems: \"flex-end\", my: 1.5 }}>\r\n            <LockIcon sx={{ color: \"action.active\", mr: 1, my: 0.5 }} />\r\n            <FormControl fullWidth variant=\"standard\">\r\n              <InputLabel htmlFor=\"standard-adornment-password\">\r\n                Password\r\n              </InputLabel>\r\n              <Input\r\n                autoFocus\r\n                required\r\n                inputRef={passwordRef}\r\n                margin=\"dense\"\r\n                id=\"password standard-required standard-adornment-password\"\r\n                type={values.showPassword ? \"text\" : \"password\"}\r\n                value={values.password}\r\n                onChange={handleChange(\"password\")}\r\n                endAdornment={\r\n                  <InputAdornment position=\"end\">\r\n                    <IconButton\r\n                      aria-label=\"toggle password visibility\"\r\n                      onClick={handleClickShowPassword}\r\n                      onMouseDown={handleMouseDownPassword}\r\n                    >\r\n                      {values.showPassword ? <VisibilityOff /> : <Visibility />}\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                }\r\n                variant=\"standard\"\r\n                fullWidth\r\n              />\r\n            </FormControl>\r\n          </Box>\r\n          {inputError && (\r\n            <RedTypography variant=\"h7\">\r\n              The inputted username and password is incorrect.\r\n            </RedTypography>\r\n          )}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={handleSubmit}>\r\n            Sign In\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default LoginPage;\r\n","import * as React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport AccountCircle from \"@mui/icons-material/AccountCircle\";\r\nimport LockIcon from \"@mui/icons-material/Lock\";\r\nimport InputAdornment from \"@mui/material/InputAdornment\";\r\nimport Visibility from \"@mui/icons-material/Visibility\";\r\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport Input from \"@mui/material/Input\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport EmailIcon from \"@mui/icons-material/Email\";\r\n\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { Typography, Box } from \"@mui/material\";\r\n\r\nconst RedTypography = withStyles({\r\n  root: {\r\n    color: \"#DC143C\",\r\n  },\r\n})(Typography);\r\n\r\nasync function registerUser(credentials) {\r\n  return fetch(\"/register\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(credentials),\r\n  }).then((data) => data.json());\r\n}\r\n\r\nasync function loginUser(credentials) {\r\n  return fetch(\"/login\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(credentials),\r\n  }).then((data) => data.json());\r\n}\r\n\r\nfunction RegisterPage(props) {\r\n  const [values, setValues] = React.useState({\r\n    amount: \"\",\r\n    password: \"\",\r\n    weight: \"\",\r\n    weightRange: \"\",\r\n    showPassword: false,\r\n  });\r\n\r\n  const handleChange = (prop) => (event) => {\r\n    setValues({ ...values, [prop]: event.target.value });\r\n  };\r\n\r\n  const handleClickShowPassword = () => {\r\n    setValues({\r\n      ...values,\r\n      showPassword: !values.showPassword,\r\n    });\r\n  };\r\n\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  const [existsError, setExistsError] = React.useState(false);\r\n  const [emptyError, setEmptyError] = React.useState(false);\r\n  const usernameRef = React.useRef();\r\n  const passwordRef = React.useRef();\r\n  const emailRef = React.useRef();\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    const u = usernameRef.current.value;\r\n    const p = passwordRef.current.value;\r\n    const e = emailRef.current.value;\r\n\r\n    const registerData = {\r\n      u,\r\n      p,\r\n      e,\r\n    };\r\n\r\n    const token = await registerUser(registerData);\r\n    console.log(token.failed);\r\n    if (token.failed === \"exists\") {\r\n      setExistsError(true);\r\n      console.log(\"This user already exists!\");\r\n    } else if (token.failed === \"empty\") {\r\n      setEmptyError(true);\r\n    } else {\r\n      console.log(\"Registration success!\");\r\n\r\n      const loginData = {\r\n        u,\r\n        p,\r\n      };\r\n\r\n      const token = await loginUser(loginData);\r\n      console.log(token.failed);\r\n      if (token.failed === \"false\") {\r\n        props.setToken(token);\r\n        props.handleClose();\r\n      } else {\r\n        console.log(\"Error logging in after registration\");\r\n      }\r\n    }\r\n    console.log(registerData);\r\n  };\r\n  return (\r\n    <Box>\r\n      <Dialog\r\n        fullWidth\r\n        maxWidth=\"xs\"\r\n        onClose={props.handleClose}\r\n        open={props.registerOpen}\r\n      >\r\n        <BootstrapDialogTitle onClose={props.handleClose}>\r\n          Register\r\n        </BootstrapDialogTitle>\r\n        <DialogContent dividers>\r\n          <Typography gutterBottom>\r\n            <b>Account Credentials:</b>\r\n          </Typography>\r\n          <Box sx={{ display: \"flex\", alignItems: \"flex-end\" }}>\r\n            <AccountCircle sx={{ color: \"action.active\", mr: 1, my: 0.5 }} />\r\n            <FormControl fullWidth variant=\"standard\">\r\n              <InputLabel htmlFor=\"standard-adornment-password\">\r\n                Username\r\n              </InputLabel>\r\n              <Input\r\n                autoFocus\r\n                inputRef={usernameRef}\r\n                margin=\"dense\"\r\n                id=\"username standard-required input-with-icon-textfield\"\r\n                label=\"Username\"\r\n                type=\"text\"\r\n                fullWidth\r\n                variant=\"standard\"\r\n              />\r\n            </FormControl>\r\n          </Box>\r\n          {existsError && !emptyError && (\r\n            <RedTypography variant=\"h7\">\r\n              The inputted username is taken.\r\n            </RedTypography>\r\n          )}\r\n          <Box sx={{ display: \"flex\", alignItems: \"flex-end\", mt: 1.5 }}>\r\n            <EmailIcon sx={{ color: \"action.active\", mr: 1, my: 0.5 }} />\r\n            <FormControl fullWidth variant=\"standard\">\r\n              <InputLabel htmlFor=\"standard-adornment-email\">Email</InputLabel>\r\n              <Input\r\n                inputRef={emailRef}\r\n                autoFocus\r\n                margin=\"dense\"\r\n                id=\"email standard-required input-with-icon-textfield\"\r\n                label=\"Email\"\r\n                type=\"email\"\r\n                fullWidth\r\n                variant=\"standard\"\r\n              />\r\n            </FormControl>\r\n          </Box>\r\n          <Box sx={{ display: \"flex\", alignItems: \"flex-end\", my: 1.5 }}>\r\n            <LockIcon sx={{ color: \"action.active\", mr: 1, my: 0.5 }} />\r\n            <FormControl fullWidth variant=\"standard\">\r\n              <InputLabel htmlFor=\"standard-adornment-password\">\r\n                Password\r\n              </InputLabel>\r\n              <Input\r\n                autoFocus\r\n                required\r\n                inputRef={passwordRef}\r\n                margin=\"dense\"\r\n                id=\"password standard-required standard-adornment-password\"\r\n                type={values.showPassword ? \"text\" : \"password\"}\r\n                value={values.password}\r\n                onChange={handleChange(\"password\")}\r\n                endAdornment={\r\n                  <InputAdornment position=\"end\">\r\n                    <IconButton\r\n                      aria-label=\"toggle password visibility\"\r\n                      onClick={handleClickShowPassword}\r\n                      onMouseDown={handleMouseDownPassword}\r\n                    >\r\n                      {values.showPassword ? <VisibilityOff /> : <Visibility />}\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                }\r\n                variant=\"standard\"\r\n                fullWidth\r\n              />\r\n            </FormControl>\r\n          </Box>\r\n          {emptyError && (\r\n            <RedTypography variant=\"h7\">\r\n              The inputted username and password cannot be blank.\r\n            </RedTypography>\r\n          )}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={handleSubmit}>\r\n            Register\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Box>\r\n  );\r\n}\r\n\r\nconst BootstrapDialogTitle = (props) => {\r\n  const { children, onClose, ...other } = props;\r\n\r\n  return (\r\n    <DialogTitle sx={{ m: 0, p: 2 }} {...other}>\r\n      {children}\r\n      {onClose ? (\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          onClick={onClose}\r\n          sx={{\r\n            position: \"absolute\",\r\n            right: 8,\r\n            top: 8,\r\n            color: (theme) => theme.palette.grey[500],\r\n          }}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </DialogTitle>\r\n  );\r\n};\r\n\r\nBootstrapDialogTitle.propTypes = {\r\n  children: PropTypes.node,\r\n  onClose: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default RegisterPage;\r\n","import * as React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nimport Typography from '@mui/material/Typography';\r\n\r\nasync function getUsername() {\r\n    console.log(\"Within getUsername!\");\r\n    return fetch(\"/username\", {\r\n        method: \"GET\",\r\n    }).then((response) => {\r\n        return response.json();\r\n    }).then((data) => {\r\n        console.log(data.username + \" is our username!\");\r\n        if (data.failed === \"false\" && data.username) {\r\n            return data.username;\r\n        } else {\r\n            return \"N/A\";\r\n        }\r\n    });\r\n}\r\n\r\nfunction GetUsernameComponent(props) {\r\n    const [data, setData] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(async () => {\r\n        try {\r\n            setLoading(true);\r\n            const data = await getUsername();\r\n            setData(data);\r\n            setLoading(false);\r\n        } catch (error) {\r\n            setLoading(false);\r\n            console.log(error);\r\n        }\r\n    }, []);\r\n\r\n    let updateUsername = props.updateUsername;\r\n\r\n    if (loading) {\r\n        return (\r\n            <Typography variant=\"h4\">\r\n                Loading username...\r\n            </Typography>);\r\n    }\r\n\r\n    if (!data) {\r\n        return (\r\n            <Typography variant=\"h4\">\r\n                Welcome user!\r\n            </Typography>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Typography variant=\"h4\">\r\n            Welcome, {data}!\r\n        </Typography>\r\n    );\r\n\r\n\r\n}\r\n\r\nexport default GetUsernameComponent;","import * as React from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\n\r\nimport Button from \"@mui/material/Button\";\r\nimport Container from '@mui/material/Container';\r\nimport Typography from '@mui/material/Typography';\r\nimport { Card, CardContent } from \"@mui/material\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport TextField from '@mui/material/TextField';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\n\r\nimport InputAdornment from \"@mui/material/InputAdornment\";\r\nimport Visibility from \"@mui/icons-material/Visibility\";\r\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\r\n\r\nimport GetUsernameComponent from './GetUsernameComponent'\r\n\r\nconst theme = createTheme({\r\n    palette: {\r\n        primary: {\r\n            main: \"#DC143C\",\r\n        },\r\n    },\r\n});\r\n\r\nconst RedTypography = withStyles({\r\n    root: {\r\n        color: \"#DC143C\",\r\n    },\r\n})(Typography);\r\n\r\nasync function changePasswordRequest(credentials) {\r\n    return fetch(\"/changePassword\", {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(credentials),\r\n    }).then((response) => {\r\n        return response.json();\r\n    }).then((data) => {\r\n        //alert(\"Changed password!\");\r\n    });\r\n}\r\n\r\nfunction getUsername() {\r\n    console.log(\"Within getUsername!\");\r\n    fetch(\"/username\", {\r\n        method: \"GET\",\r\n    }).then((response) => {\r\n        return response.json();\r\n    }).then((data) => {\r\n        console.log(data.username + \" is our username!\");\r\n        if (data.failed === \"false\" && data.username) {\r\n            return data.username;\r\n        } else {\r\n            return \"N/A\";\r\n        }\r\n    });\r\n}\r\n\r\n\r\nclass MyAccountPage extends React.Component {\r\n\r\n   \r\n    constructor(props) {\r\n        super(props);\r\n        this.passwordInput = React.createRef('');\r\n    }\r\n\r\n    changePassword = (event) => {\r\n        event.preventDefault();\r\n        console.log(\"Changing password in changePassword!\")\r\n        const data = new FormData(event.currentTarget);\r\n        const password = data.get('newPassword');\r\n        if (password.trim() === \"\") {\r\n            this.setState({\r\n                success: false,\r\n                emptyPassword: true\r\n            })\r\n        } else {\r\n            const credentials = {\r\n                newPassword: password\r\n            }\r\n            changePasswordRequest(credentials);\r\n            this.passwordInput.current.value = null;\r\n            this.setState({\r\n                success: true,\r\n                emptyPassword: false\r\n            })\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <ThemeProvider theme={theme}>\r\n                <Container component=\"main\">\r\n                    <Grid container spacing={0}\r\n                        sx={{ my: 2 }}\r\n                        direction=\"column\"\r\n                        alignItems=\"center\"\r\n                        justifyContent=\"center\">\r\n                        <GetUsernameComponent>\r\n                        </GetUsernameComponent>\r\n                    </Grid>\r\n\r\n                    <Grid container spacing={0}\r\n                        direction=\"column\"\r\n                        alignItems=\"center\"\r\n                        justifyContent=\"center\">\r\n                        <Card sx={{ height: \"100%\", display: \"flex\", flexDirection: \"row\", boxShadow: 3 }}>\r\n                            <CardContent sx={{ flexGrow: 1 }}>\r\n                                <Box component=\"form\" noValidate onSubmit={this.changePassword} sx={{ mx: 12, my: 4 }}>\r\n                                    <Typography variant=\"h5\" mb={2} textAlign=\"center\">\r\n                                        Change Password\r\n                                    </Typography>\r\n                                    <Grid container spacing={2} direction=\"column\"\r\n                                        >\r\n                                        <Grid item>\r\n                                            <TextField\r\n                                                name=\"newPassword\"\r\n                                                required\r\n                                                type=\"password\"\r\n                                                fullWidth\r\n                                                id=\"newPassword\"\r\n                                                label=\"Enter your new password\"\r\n                                                autoFocus\r\n                                                inputRef={this.passwordInput}\r\n                                            />\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    {this.state && this.state.success && (\r\n                                        <Grid container spacing={0} sx={{ mt: 2 }} direction=\"column\"\r\n                                            alignItems=\"center\"\r\n                                            justifyContent=\"center\">\r\n                                            <RedTypography variant=\"h8\">\r\n                                                Password changed!\r\n                                            </RedTypography>\r\n                                        </Grid>\r\n                                    )\r\n                                    }\r\n                                    {this.state && this.state.emptyPassword && (\r\n                                        <Grid container spacing={0} sx={{ mt: 2 }} direction=\"column\"\r\n                                            alignItems=\"center\"\r\n                                            justifyContent=\"center\">\r\n                                            <RedTypography variant=\"h8\">\r\n                                                Password cannot be blank!\r\n                                            </RedTypography>\r\n                                        </Grid>\r\n                                    )\r\n                                    }\r\n                                    <Button\r\n                                        type=\"submit\"\r\n                                        fullWidth\r\n                                        variant=\"contained\"\r\n                                        sx={{ mt: 3, mb: 2 }}\r\n                                    >\r\n                                        Change Password\r\n                                    </Button>\r\n                                </Box>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid container spacing={0}\r\n                        sx={{ my: 2 }}\r\n                        direction=\"column\"\r\n                        alignItems=\"center\"\r\n                        justifyContent=\"center\">\r\n                        <Button component={Link} to=\"/\">Return To Main Page</Button>\r\n                    </Grid>\r\n                </Container>\r\n            </ThemeProvider >\r\n        );\r\n    }\r\n}\r\n\r\nexport default MyAccountPage;","import \"./App.css\";\r\nimport * as React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nimport Layout from \"./components/layout/Layout\";\r\n\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\nimport BuildingList from \"./components/BuildingInformation/BuildingList\";\r\n\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport WelcomeMessage from \"./components/WelcomeMessage\";\r\nimport LoginPage from \"./modals/LoginPage\";\r\nimport RegisterPage from \"./modals/RegisterPage\";\r\n\r\nimport useToken from \"./store/loginStore\";\r\nimport ContactsContext from \"./store/favoriteContext\";\r\n\r\nimport { ContactsContextProvider } from \"./store/favoriteContext\";\r\n\r\nimport MyAccountPage from './modals/MyAccountPage'\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#DC143C\",\r\n    },\r\n  },\r\n});\r\n\r\nfunction App() {\r\n  const [alignment, setAlignment] = React.useState(\"All\");\r\n\r\n  const { token, setToken } = useToken();\r\n\r\n  const [laundryData, setData] = React.useState([]);\r\n\r\n  const [timestampData, setTimestampData] = React.useState([]);\r\n\r\n  const [openLogin, setOpenLogin] = React.useState(false);\r\n  const [openRegister, setOpenRegister] = React.useState(false);\r\n\r\n  const [showFavorites, setShowFavorites] = React.useState(false);\r\n\r\n  const [time, setTime] = React.useState(Date.now());\r\n\r\n  React.useEffect(() => {\r\n    const interval = setInterval(() => setTime(Date.now()), 120000);\r\n    return () => {\r\n      clearInterval(interval);\r\n    };\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    fetch(\"/laundry\", {\r\n      method: \"GET\",\r\n    })\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        data.splice(data.length - 1);\r\n        setData(data);\r\n        console.log(data);\r\n      });\r\n  }, [time]);\r\n\r\n  React.useEffect(() => {\r\n    fetch(\"/timestamp\", {\r\n      method: \"GET\",\r\n    })\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        setTimestampData(data);\r\n        console.log(data);\r\n      });\r\n  }, [time]);\r\n\r\n  async function logoutUser() {\r\n    console.log(\"Within logout...\");\r\n    return fetch(\"/logout\", {\r\n      method: \"GET\",\r\n    }).then((data) => {\r\n      console.log(\"Logged out successfully!\");\r\n      console.log(alignment);\r\n      setAlignment(\"All\");\r\n      setShowFavorites(false);\r\n      setToken(null);\r\n    });\r\n  }\r\n\r\n  const handleClickOpenLogin = () => {\r\n    setOpenLogin(true);\r\n  };\r\n  const handleClickOpenLogout = async () => {\r\n    const result = await logoutUser();\r\n    console.log(\"Logging out user!\" + result);\r\n  };\r\n  const handleClickRegister = () => {\r\n    setOpenRegister(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpenLogin(false);\r\n    setOpenRegister(false);\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Layout\r\n        handleRegister={handleClickRegister}\r\n        handleLogin={handleClickOpenLogin}\r\n        handleLogout={handleClickOpenLogout}\r\n        loggedIn={token}\r\n      >\r\n        {openLogin && (\r\n          <LoginPage\r\n            loginOpen={openLogin}\r\n            setToken={setToken}\r\n            handleClose={handleClose}\r\n            handleFavorite={setShowFavorites}\r\n            favoriteButton={setAlignment}\r\n          />\r\n        )}\r\n        {openRegister && (\r\n          <RegisterPage\r\n            registerOpen={openRegister}\r\n            setToken={setToken}\r\n            handleClose={handleClose}\r\n          />\r\n        )}\r\n\r\n        <Switch>\r\n          <Route path=\"/\" exact={true}>\r\n            {token && (\r\n              <ContactsContextProvider>\r\n                <WelcomeMessage\r\n                  setFavorites={setShowFavorites}\r\n                  timestamp={timestampData}\r\n                  loggedIn={token}\r\n                  alignment={alignment}\r\n                  setAlignment={setAlignment}\r\n                />\r\n                <BuildingList\r\n                  data={laundryData}\r\n                  showFavorites={showFavorites}\r\n                />\r\n              </ContactsContextProvider>\r\n            )}\r\n            {!token && (\r\n              <div>\r\n                <WelcomeMessage\r\n                  setFavorites={setShowFavorites}\r\n                  timestamp={timestampData}\r\n                  loggedIn={token}\r\n                  alignment={alignment}\r\n                  setAlignment={setAlignment}\r\n                />\r\n                <BuildingList\r\n                  data={laundryData}\r\n                  showFavorites={showFavorites}\r\n                />\r\n              </div>\r\n            )}\r\n          </Route>\r\n\r\n          <Route path=\"/myAccount\">\r\n            {token && (\r\n              <MyAccountPage username={token.username}></MyAccountPage>\r\n            )}\r\n          </Route>\r\n        </Switch>\r\n      </Layout>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { useState } from \"react\";\r\n\r\nexport default function useToken() {\r\n  const getToken = () => {\r\n    const tokenString = sessionStorage.getItem(\"token\");\r\n    const userToken = JSON.parse(tokenString);\r\n    return userToken?.failed;\r\n  };\r\n  const [token, setToken] = useState(getToken());\r\n\r\n  const saveToken = (userToken) => {\r\n    sessionStorage.setItem(\"token\", JSON.stringify(userToken));\r\n    setToken(userToken);\r\n  };\r\n\r\n  return {\r\n    setToken: saveToken,\r\n    token,\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}