{"version":3,"sources":["components/layout/Layout.module.css","components/layout/NavBar.js","components/layout/Layout.js","components/machineInformation/DryerItem.js","components/machineInformation/WasherItem.js","components/machineInformation/MachineList.js","store/favoriteContext.js","components/BuildingInformation/AcordianItem.js","components/BuildingInformation/BuildingList.js","components/WelcomeMessage.js","modals/LoginPage.js","modals/RegisterPage.js","modals/GetUsernameComponent.js","modals/MyAccountPage.js","App.js","store/loginStore.js","index.js"],"names":["module","exports","NavBar","props","React","anchorEl","setAnchorEl","console","log","loggedIn","handleMenu","event","currentTarget","Box","sx","flexGrow","AppBar","position","Toolbar","Typography","variant","component","style","cursor","onClick","IconButton","size","color","Menu","id","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","Boolean","onClose","MenuItem","handleRegister","handleLogin","Link","to","handleLogout","Layout","className","calsses","main","children","yellow","red","black","DryerItem","value","status","dryerColor","item","minutes_left","Card","height","display","flexDirection","boxShadow","CardContent","alignItems","flexWrap","gutterBottom","machinenumber","minWidth","paddingfontsize","WasherItem","washerColor","MachineList","Container","py","maxWidth","Grid","container","spacing","washerInfo","map","index","md","sm","xs","show","hide","onHide","dryerInfo","ContactsContext","createContext","contacts","addContactHandler","contact","removeContactHandler","contactId","getContactHandler","editContactHandler","ContactsContextProvider","useState","loadedData","setData","useEffect","fetch","method","then","response","json","data","context","periousContacts","concat","filter","find","element","_id","x","removeAll","Provider","Accordion","styled","disableGutters","elevation","square","theme","border","palette","divider","borderBottom","AccordionSummary","expandIcon","fontSize","backgroundColor","mode","transform","marginLeft","AccordionDetails","MuiAccordionDetails","padding","borderTop","addFavorite","credentials","a","headers","body","JSON","stringify","removeFavorite","getColor","AccordianItem","washeravailable_percent","dryeravailable_percent","favorite","setFav","handleAddFavorite","e","preventDefault","stopPropagation","favoriteItem","fav","humanname","token","failed","handleRemoveFavorite","expanded","onChange","handleChange","direction","washers","dryers","BuildingList","favoriteContext","useContext","setExpanded","panel","newExpanded","showFavorites","filteredData","includes","WelcomeMessage","timestring","timestamp","lu","Date","toLocaleString","navigator","language","year","month","day","hour","minute","m","List","ListItem","ToggleButtonGroup","alignment","exclusive","newAlignment","setAlignment","ToggleButton","setFavorites","BootstrapDialogTitle","other","DialogTitle","p","right","top","grey","RedTypography","withStyles","root","loginUser","LoginPage","prop","amount","password","weight","weightRange","showPassword","values","setValues","inputError","setError","usernameRef","passwordRef","handleSubmit","u","current","loginData","setToken","handleClose","handleFavorite","favoriteButton","Dialog","fullWidth","loginOpen","DialogContent","dividers","mr","my","TextField","autoFocus","inputRef","margin","label","type","FormControl","InputLabel","htmlFor","Input","required","target","endAdornment","InputAdornment","onMouseDown","DialogActions","Button","registerUser","RegisterPage","existsError","setExistsError","emptyError","setEmptyError","emailRef","registerData","registerOpen","mt","getUsername","username","GetUsernameComponent","loading","setLoading","updateUsername","createTheme","primary","MyAccountPage","changePassword","FormData","get","trim","setState","success","emptyPassword","changePasswordRequest","newPassword","passwordInput","ThemeProvider","justifyContent","noValidate","onSubmit","this","mx","mb","textAlign","name","state","App","tokenString","sessionStorage","getItem","userToken","parse","getToken","setItem","useToken","laundryData","timestampData","setTimestampData","openLogin","setOpenLogin","openRegister","setOpenRegister","setShowFavorites","now","time","setTime","logoutUser","interval","setInterval","clearInterval","splice","length","handleClickOpenLogout","result","path","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f8627648.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__auk_r\"};","import * as React from \"react\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Box from \"@mui/material/Box\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport IconButton from \"@mui/material/IconButton\";\n\nimport AccountCircle from \"@mui/icons-material/AccountCircle\";\n\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Menu from \"@mui/material/Menu\";\n\nimport {Link} from 'react-router-dom'\n\nfunction NavBar(props) {\n  const [auth, setAuth] = React.useState(false)\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  console.log(\"Our login status: \" + props.loggedIn);\n\n\n  const handleChange = (event) => {\n    setAuth(event.target.checked);\n  };\n\n  const handleMenu = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleLogin = () => {\n    props.handleLogin();\n    setAnchorEl(null);\n  };\n\n  const handleLogout = () => {\n    props.handleLogout();\n    setAnchorEl(null);\n  }\n\n  const handleRegister = () => {\n    props.handleRegister();\n    setAnchorEl(null);\n  };\n\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n            Laundry Connect 2.0\n          </Typography>\n\n          <div>\n            <span style={{ cursor: \"pointer\" }} onClick={handleMenu}>\n              {\" \"}\n              Account Details{\" \"}\n            </span>\n            <IconButton\n              size=\"large\"\n              aria-label=\"account of current user\"\n              aria-controls=\"menu-appbar\"\n              aria-haspopup=\"true\"\n              onClick={handleMenu}\n              color=\"inherit\"\n            >\n              <AccountCircle />\n            </IconButton>\n            <Menu\n              id=\"menu-appbar\"\n              anchorEl={anchorEl}\n              anchorOrigin={{\n                vertical: \"top\",\n                horizontal: \"right\",\n              }}\n              keepMounted\n              transformOrigin={{\n                vertical: \"top\",\n                horizontal: \"right\",\n              }}\n              open={Boolean(anchorEl)}\n              onClose={handleClose}\n            >\n              {!props.loggedIn && (\n                <div>\n                  <MenuItem onClick={handleRegister}>Register</MenuItem>\n                  <MenuItem onClick={handleLogin}>Sign In</MenuItem>\n                </div>\n              )}\n\n              {props.loggedIn && (\n                <div>\n                  <MenuItem component={Link} to=\"/myAccount\">My Account</MenuItem>\n                  <MenuItem component={Link} to=\"/\" onClick={handleLogout}>Sign Out</MenuItem>\n                </div>\n              )}\n            </Menu>\n          </div>\n        </Toolbar>\n      </AppBar>\n    </Box>\n  );\n}\nexport default NavBar;\n","import NavBar from \"./NavBar\";\nimport calsses from \"./Layout.module.css\";\n\nimport * as React from \"react\";\n\nfunction Layout(props) {\n  return (\n    <div>\n      <div>\n        <NavBar\n          handleRegister={props.handleRegister}\n          handleLogin={props.handleLogin}\n          loggedIn={props.loggedIn}\n          handleLogout={props.handleLogout}\n        />\n      </div>\n      <main className={calsses.main}>{props.children}</main>\n    </div>\n  );\n}\n\nexport default Layout;\n","import { Typography, Card, CardContent } from \"@mui/material\";\nimport CircleIcon from \"@mui/icons-material/Circle\";\nimport LocalLaundryServiceIcon from \"@mui/icons-material/LocalLaundryService\";\nimport DryCleaningTwoToneIcon from \"@mui/icons-material/DryCleaningTwoTone\";\n\nvar orange = \"fdb996\";\nvar yellow = \"#fdec96\";\nvar red = \"#fc647d\";\nvar green = \"#90ee90\";\nvar black = \"#000000\";\n\nfunction getColor(value, status) {\n  if (value === null && status === \"Ready For Pickup\") return yellow;\n  else if (status === \"Available\") return green;\n  else if (status === \"Offline\") return black;\n  else if (value === null && status === \"Ready To Start\") return red;\n  else if (value <= 15) return yellow;\n  else if (value <= 35) return orange;\n  else if (value <= 50) return red;\n  else if (status === \"Offline\") return black;\n  else return black;\n}\n\nfunction DryerItem(props) {\n  const dryerColor = getColor(props.item.minutes_left, props.item.status);\n\n  return (\n    <Card\n      sx={{\n        height: \"100%\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        boxShadow: 3,\n      }}\n    >\n      <CardContent sx={{ flexGrow: 1 }}>\n        <div\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            flexWrap: \"wrap\",\n          }}\n        >\n          <Typography gutterBottom variant=\"h6\">\n            Dryer - #{props.item.machinenumber}\n          </Typography>\n          <DryCleaningTwoToneIcon\n            style={{ minWidth: \"120px\" }}\n            paddingfontsize=\"large\"\n          />\n          {/* <DryCleaningTwoToneIcon\n            style={{ minWidth: \"40px\" }}\n            paddingfontsize=\"large\"\n          /> */}\n        </div>\n\n        <div\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            flexWrap: \"wrap\",\n          }}\n        >\n          <CircleIcon\n            paddingfontsize=\"small\"\n            style={{ minWidth: \"40px\", color: dryerColor }}\n          />\n\n          <span> {props.item.status} </span>\n          {props.item.minutes_left !== null && (\n            <span> : {props.item.minutes_left} Minutes</span>\n          )}\n        </div>\n      </CardContent>\n      {/* <CardActions>\n        <Button size=\"small\">View</Button>\n        <Button size=\"small\">Edit</Button>\n      </CardActions> */}\n    </Card>\n  );\n}\n\nexport default DryerItem;\n","import { Typography, Card, CardContent } from \"@mui/material\";\nimport CircleIcon from \"@mui/icons-material/Circle\";\nimport LocalLaundryServiceIcon from \"@mui/icons-material/LocalLaundryService\";\nimport DryCleaningTwoToneIcon from \"@mui/icons-material/DryCleaningTwoTone\";\n\nvar orange = \"fdb996\"\nvar yellow = \"#fdec96\"\nvar red = \"#fc647d\"\nvar green = \"#90ee90\"\nvar black = \"#000000\"\n\n\nfunction getColor(value, status) {\n  if (value === null && status === \"Ready For Pickup\") return yellow;\n  else if (status === \"Available\") return green;\n  else if (status === \"Offline\") return black;\n  else if (value === null && status === \"Ready To Start\") return red;\n  else if (value >= 20) return red;\n  else if (value >= 10) return orange;\n  else if (value >= 0) return yellow;\n  else if (status === \"Offline\") return black;\n  else return black;\n}\n\nfunction WasherItem(props) {\n  const washerColor = getColor(props.item.minutes_left, props.item.status);\n\n  return (\n    <Card sx={{ height: \"100%\", display: \"flex\", flexDirection: \"column\", boxShadow: 3 }}>\n      <CardContent sx={{ flexGrow: 1 }}>\n        <div\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            flexWrap: \"wrap\",\n          }}\n        >\n          <Typography gutterBottom variant=\"h6\">\n            Washer - #{props.item.machinenumber}\n          </Typography>\n          <LocalLaundryServiceIcon\n            style={{ minWidth: \"100px\" }}\n            paddingfontsize=\"small\"\n          />\n          {/* <DryCleaningTwoToneIcon\n            style={{ minWidth: \"40px\" }}\n            paddingfontsize=\"large\"\n          /> */}\n        </div>\n\n        <div\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            flexWrap: \"wrap\",\n          }}\n        >\n          <CircleIcon\n            paddingfontsize=\"small\"\n            style={{ minWidth: \"40px\", color: washerColor }}\n          />\n         \n          <span> {props.item.status} </span>\n          {(props.item.minutes_left !== null) && <span>  : { props.item.minutes_left}  Minutes</span>}\n          \n        </div>\n      </CardContent>\n      {/* <CardActions>\n        <Button size=\"small\">View</Button>\n        <Button size=\"small\">Edit</Button>\n      </CardActions> */}\n    </Card>\n  );\n}\n\nexport default WasherItem;\n","import DryerItem from \"./DryerItem\";\nimport WasherItem from \"./WasherItem\";\nimport { Container, Grid } from \"@mui/material\";\n\nfunction MachineList(props) {\n  return (\n    <Container sx={{ py: 4 }} maxWidth=\"lg\">\n      <Grid container spacing={3}>\n        {props.washerInfo.map((item, index) => (\n          <Grid item key={index} md={3} sm={6} xs={12}>\n            <WasherItem\n              show={props.show}\n              hide={props.onHide}\n              key={index + 1}\n              index={index + 1}\n              item={item}\n            />\n          </Grid>\n        ))}\n\n        {props.dryerInfo.map((item, index) => (\n          <Grid item key={index} md={3} sm={6} xs={12}>\n            <DryerItem\n              show={props.show}\n              hide={props.onHide}\n              key={index + 1}\n              index={index + 1}\n              item={item}\n            />\n          </Grid>\n        ))}\n      </Grid>\n    </Container>\n  );\n}\n\nexport default MachineList;\n","import { createContext, useState, useEffect } from \"react\";\n\nconst ContactsContext = createContext({\n  contacts: [],\n  addContactHandler: (contact) => {},\n  removeContactHandler: (contactId) => {},\n  getContactHandler: (id) => {},\n  editContactHandler: (contact) => {},\n});\n\nexport function ContactsContextProvider(props) {\n  const [loadedData, setData] = useState([]);\n  useEffect(() => {\n    fetch(\"/favBuildings\", {\n      method: \"GET\",\n    })\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        setData(data);\n      });\n  }, []);\n\n  const context = {\n    contacts: loadedData,\n    addContactHandler,\n    removeContactHandler,\n    getContactHandler,\n    editContactHandler,\n    removeAll,\n  };\n\n  function addContactHandler(contact) {\n    setData((periousContacts) => {\n      return periousContacts.concat(contact);\n    });\n  }\n\n  function removeAll() {\n    setData([]);\n  }\n\n  function getContactHandler(id) {\n    let obj = loadedData.find((element) => element._id === id);\n    return obj;\n  }\n\n  function removeContactHandler(contactId) {\n    setData((periousContacts) => {\n      return periousContacts.filter((contact) => contact !== contactId);\n    });\n  }\n\n  function editContactHandler(contact) {\n    setData((periousContacts) => {\n      return periousContacts.map((x) => (x._id === contact._id ? contact : x));\n    });\n  }\n\n  return (\n    <ContactsContext.Provider value={context}>\n      {props.children}\n    </ContactsContext.Provider>\n  );\n}\n\nexport default ContactsContext;\n","import MuiAccordion from \"@mui/material/Accordion\";\nimport MuiAccordionSummary from \"@mui/material/AccordionSummary\";\nimport MuiAccordionDetails from \"@mui/material/AccordionDetails\";\nimport Typography from \"@mui/material/Typography\";\nimport { Grid, Container } from \"@mui/material\";\nimport * as React from \"react\";\n\nimport StarOutlineIcon from \"@mui/icons-material/StarOutline\";\nimport StarRateIcon from \"@mui/icons-material/StarRate\";\n\nimport CircleIcon from \"@mui/icons-material/Circle\";\n\nimport { styled } from \"@mui/material/styles\";\nimport ArrowForwardIosSharpIcon from \"@mui/icons-material/ArrowForwardIosSharp\";\nimport MachineList from \"../machineInformation/MachineList\";\n\nimport ContactsContext from \"../../store/favoriteContext\";\n\nimport { useState, useContext } from \"react\";\n\nconst Accordion = styled((props) => (\n  <MuiAccordion disableGutters elevation={0} square {...props} />\n))(({ theme }) => ({\n  border: `1px solid ${theme.palette.divider}`,\n  \"&:not(:last-child)\": {\n    borderBottom: 0,\n  },\n  \"&:before\": {\n    display: \"none\",\n  },\n}));\n\nconst AccordionSummary = styled((props) => (\n  <MuiAccordionSummary\n    expandIcon={<ArrowForwardIosSharpIcon sx={{ fontSize: \"0.9rem\" }} />}\n    {...props}\n  />\n))(({ theme }) => ({\n  backgroundColor:\n    theme.palette.mode === \"dark\"\n      ? \"rgba(255, 255, 255, .05)\"\n      : \"rgba(0, 0, 0, .03)\",\n  flexDirection: \"row-reverse\",\n  \"& .MuiAccordionSummary-expandIconWrapper.Mui-expanded\": {\n    transform: \"rotate(90deg)\",\n  },\n  \"& .MuiAccordionSummary-content\": {\n    marginLeft: theme.spacing(1),\n  },\n}));\n\nconst AccordionDetails = styled(MuiAccordionDetails)(({ theme }) => ({\n  padding: theme.spacing(2),\n  borderTop: \"1px solid rgba(0, 0, 0, .125)\",\n}));\n\nasync function addFavorite(credentials) {\n  return fetch(\"/addFavorite\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(credentials),\n  }).then((data) => data.json());\n}\n\nasync function removeFavorite(credentials) {\n  return fetch(\"/delFavorite\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(credentials),\n  }).then((data) => data.json());\n}\n\nfunction getColor(value) {\n  if (value >= 75) return \"#90ee90\";\n  else if (value >= 50) return \"#fdec96\";\n  else if (value >= 25) return \"#fdb996\";\n  else if (value >= 0) return \"#fc647d\";\n  else return \"#000000\";\n}\n\nfunction AccordianItem(props) {\n  const washerColor = getColor(props.item.washeravailable_percent);\n  const dryerColor = getColor(props.item.dryeravailable_percent);\n\n  console.log(\"favorite: \" + props.favorite);\n  const [isFav, setFav] = React.useState(props.favorite);\n\n  const handleAddFavorite = async (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    const favoriteItem = {\n      fav: props.item.humanname,\n    };\n\n    const token = await addFavorite(favoriteItem);\n    console.log(token.failed);\n    if (token.failed === \"false\") {\n      setFav(true);\n      props.addContactHandler(props.item.humanname);\n    }\n  };\n\n  const handleRemoveFavorite = async (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    const favoriteItem = {\n      fav: props.item.humanname,\n    };\n\n    const token = await removeFavorite(favoriteItem);\n    console.log(token.failed);\n    if (token.failed === \"false\") {\n      props.removeContactHandler(props.item.humanname);\n    }\n  };\n\n  return (\n    <div>\n      <Accordion\n        expanded={props.expanded === \"panel\" + props.index}\n        onChange={props.handleChange(\"panel\" + props.index)}\n      >\n        <AccordionSummary>\n          <Grid container direction={\"row\"} spacing={2}>\n            <Grid item xs={3} sm={3}>\n              <Typography>{props.item.humanname}</Typography>{\" \"}\n            </Grid>\n            <Grid item xs={4}>\n              <div style={{ display: \"inline-flex\" }}>\n                <CircleIcon fontSize=\"small\" style={{ color: washerColor }} />\n                &nbsp;\n                <Typography>\n                  <span>\n                    {props.item.washeravailable_percent}% Washers Available\n                  </span>\n                </Typography>\n              </div>\n            </Grid>\n            <Grid item xs={3} sm={4}>\n              <div style={{ display: \"inline-flex\" }}>\n                <CircleIcon fontSize=\"small\" style={{ color: dryerColor }} />\n                &nbsp;\n                <Typography>\n                  <span>\n                    {props.item.dryeravailable_percent}% Dryers Available\n                  </span>\n                </Typography>\n              </div>\n            </Grid>\n          </Grid>\n          <Grid item>\n            {!props.favorite && (\n              <StarOutlineIcon onClick={handleAddFavorite} fontSize=\"small\" />\n            )}\n            {props.favorite && (\n              <StarRateIcon onClick={handleRemoveFavorite} fontSize=\"small\" />\n            )}\n          </Grid>\n        </AccordionSummary>\n        <AccordionDetails>\n          <MachineList\n            washerInfo={props.item.washers}\n            dryerInfo={props.item.dryers}\n          />\n        </AccordionDetails>\n      </Accordion>\n    </div>\n  );\n}\n\nexport default AccordianItem;\n","import AccordianItem from \"./AcordianItem\";\nimport ContactsContext from \"../../store/favoriteContext\";\nimport { useState, useContext } from \"react\";\n\nfunction BuildingList(props) {\n  const favoriteContext = useContext(ContactsContext);\n  const [expanded, setExpanded] = useState(\"\");\n\n  const handleChange = (panel) => (event, newExpanded) => {\n    setExpanded(newExpanded ? panel : false);\n  };\n\n  if (!props.showFavorites) {\n    return (\n      <div>\n        {props.data.map((item, index) => {\n          return (\n            <AccordianItem\n              expanded={expanded}\n              handleChange={handleChange}\n              show={props.show}\n              hide={props.onHide}\n              key={index + 1}\n              index={index + 1}\n              item={item}\n              favorite={favoriteContext.contacts.includes(item.humanname)}\n              removeContactHandler={favoriteContext.removeContactHandler}\n              addContactHandler={favoriteContext.addContactHandler}\n            />\n          );\n        })}\n      </div>\n    );\n  } else {\n    const rawData = props.data;\n    const filteredData = rawData.filter((item) =>\n      favoriteContext.contacts.includes(item.humanname)\n    );\n\n    return (\n      <div>\n        {filteredData.map((item, index) => {\n          console.log(favoriteContext.contacts);\n          return (\n            <AccordianItem\n              expanded={expanded}\n              handleChange={handleChange}\n              show={props.show}\n              hide={props.onHide}\n              key={index + 1}\n              index={index + 1}\n              item={item}\n              favorite={favoriteContext.contacts.includes(item.humanname)}\n              removeContactHandler={favoriteContext.removeContactHandler}\n              addContactHandler={favoriteContext.addContactHandler}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nexport default BuildingList;\n","import {\n  Typography,\n  Box,\n  ToggleButton,\n  ToggleButtonGroup,\n} from \"@mui/material\";\n\nimport * as React from \"react\";\n\nimport Card from \"@mui/material/Card\";\nimport CircleIcon from \"@mui/icons-material/Circle\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\n\nfunction WelcomeMessage(props) {\n  const handleChange = (event, newAlignment) => {\n    if (newAlignment !== null) props.setAlignment(newAlignment);\n  };\n\n  console.log(props.timestamp);\n  let timestring;\n\n  try {\n    const lu = new Date(props.timestamp[0].timestamp * 1000);\n    timestring =\n      lu.toLocaleString(navigator.language, {\n        year: \"numeric\",\n        month: \"long\",\n        day: \"numeric\",\n      }) +\n      \" at \" +\n      lu.toLocaleString(navigator.language, {\n        hour: \"numeric\",\n        minute: \"numeric\",\n      });\n  } catch (e) {\n    timestring = \"Loading...\";\n  }\n\n  return (\n    <div>\n      <Box\n        sx={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          \"& > *\": {\n            m: 1,\n          },\n        }}\n      >\n        <Typography variant=\"h4\">\n          <b>Welcome to LaundryConnect 2.0! </b>\n        </Typography>\n        <Typography variant=\"h5\">\n          Because Laundry Connect sucks at web design, and WPI deserves a better\n          how-busy-is-the-laundry-room experience.\n        </Typography>\n\n        <Card sx={{ boxShadow: 3 }}>\n          <List>\n            <div style={{ display: \"inline-flex\" }}>\n              <List>\n                <ListItem>\n                  <CircleIcon fontSize=\"small\" style={{ color: \"#90ee90\" }} />\n                  &nbsp;\n                  <Typography>Available</Typography>\n                </ListItem>\n              </List>\n            </div>\n            <div style={{ display: \"inline-flex\" }}>\n              <List>\n                <ListItem>\n                  <CircleIcon fontSize=\"small\" style={{ color: \"#fdec96\" }} />\n                  &nbsp;\n                  <Typography>Almost Done</Typography>\n                </ListItem>\n              </List>\n            </div>\n            <div style={{ display: \"inline-flex\" }}>\n              <List>\n                <ListItem>\n                  <CircleIcon fontSize=\"small\" style={{ color: \"#fdb996\" }} />\n                  &nbsp;\n                  <Typography>In Use</Typography>\n                </ListItem>\n              </List>\n            </div>\n            <div style={{ display: \"inline-flex\" }}>\n              <List>\n                <ListItem>\n                  <CircleIcon fontSize=\"small\" style={{ color: \"#fc647d\" }} />\n                  &nbsp;\n                  <Typography>Just Started</Typography>\n                </ListItem>\n              </List>\n            </div>\n            <div style={{ display: \"inline-flex\" }}>\n              <List>\n                <ListItem>\n                  <CircleIcon fontSize=\"small\" style={{ color: \"#000000\" }} />\n                  &nbsp;\n                  <Typography>Out of Order</Typography>\n                </ListItem>\n              </List>\n            </div>\n          </List>\n        </Card>\n        <Typography variant=\"small\">Last updated: {timestring}</Typography>\n        <ToggleButtonGroup\n          color=\"primary\"\n          value={props.alignment}\n          exclusive\n          onChange={handleChange}\n        >\n          <ToggleButton\n            onClick={() => {\n              props.setFavorites(false);\n            }}\n            value=\"All\"\n          >\n            All Locations\n          </ToggleButton>\n          <ToggleButton\n            onClick={() => {\n              props.setFavorites(true);\n            }}\n            value=\"Selected\"\n          >\n            Favorite Locations\n          </ToggleButton>\n        </ToggleButtonGroup>\n      </Box>\n    </div>\n  );\n}\n\nexport default WelcomeMessage;\n","import * as React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"@mui/material/Button\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport IconButton from \"@mui/material/IconButton\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport AccountCircle from \"@mui/icons-material/AccountCircle\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport Visibility from \"@mui/icons-material/Visibility\";\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Input from \"@mui/material/Input\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport LockIcon from \"@mui/icons-material/Lock\";\n\nimport TextField from \"@mui/material/TextField\";\nimport { Typography, Box } from \"@mui/material\";\n\nconst BootstrapDialogTitle = (props) => {\n  const { children, onClose, ...other } = props;\n\n  return (\n    <DialogTitle sx={{ m: 0, p: 2 }} {...other}>\n      {children}\n      {onClose ? (\n        <IconButton\n          aria-label=\"close\"\n          onClick={onClose}\n          sx={{\n            position: \"absolute\",\n            right: 8,\n            top: 8,\n            color: (theme) => theme.palette.grey[500],\n          }}\n        >\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </DialogTitle>\n  );\n};\n\nBootstrapDialogTitle.propTypes = {\n  children: PropTypes.node,\n  onClose: PropTypes.func.isRequired,\n};\n\nconst RedTypography = withStyles({\n  root: {\n    color: \"#DC143C\",\n  },\n})(Typography);\n\nasync function loginUser(credentials) {\n  return fetch(\"/login\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(credentials),\n  }).then((data) => data.json());\n}\n\nfunction LoginPage(props) {\n  const [values, setValues] = React.useState({\n    amount: \"\",\n    password: \"\",\n    weight: \"\",\n    weightRange: \"\",\n    showPassword: false,\n  });\n\n  const handleChange = (prop) => (event) => {\n    setValues({ ...values, [prop]: event.target.value });\n  };\n\n  const handleClickShowPassword = () => {\n    setValues({\n      ...values,\n      showPassword: !values.showPassword,\n    });\n  };\n\n  const handleMouseDownPassword = (event) => {\n    event.preventDefault();\n  };\n\n  const [inputError, setError] = React.useState(false);\n  const usernameRef = React.useRef();\n  const passwordRef = React.useRef();\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    const u = usernameRef.current.value;\n    const p = passwordRef.current.value;\n\n    const loginData = {\n      u,\n      p,\n    };\n\n    const token = await loginUser(loginData);\n    console.log(token.failed);\n    if (token.failed === \"false\") {\n      props.setToken(token);\n      props.handleClose();\n      setError(false);\n      props.handleFavorite(true);\n      props.favoriteButton(\"Selected\");\n    } else {\n      setError(true);\n    }\n  };\n\n  return (\n    <Box>\n      <Dialog\n        fullWidth\n        maxWidth=\"xs\"\n        onClose={props.handleClose}\n        open={props.loginOpen}\n      >\n        <BootstrapDialogTitle onClose={props.handleClose}>\n          Sign In\n        </BootstrapDialogTitle>\n        <DialogContent dividers>\n          <Typography gutterBottom>\n            <b>Login Credentials:</b>\n          </Typography>\n\n          <Box sx={{ display: \"flex\", alignItems: \"flex-end\" }}>\n            <AccountCircle sx={{ color: \"action.active\", mr: 1, my: 0.5 }} />\n            <TextField\n              autoFocus\n              inputRef={usernameRef}\n              margin=\"dense\"\n              id=\"username standard-required input-with-icon-textfield\"\n              label=\"Username\"\n              type=\"text\"\n              fullWidth\n              variant=\"standard\"\n            />\n          </Box>\n          <Box sx={{ display: \"flex\", alignItems: \"flex-end\", my: 1.5 }}>\n            <LockIcon sx={{ color: \"action.active\", mr: 1, my: 0.5 }} />\n            <FormControl fullWidth variant=\"standard\">\n              <InputLabel htmlFor=\"standard-adornment-password\">\n                Password\n              </InputLabel>\n              <Input\n                autoFocus\n                required\n                inputRef={passwordRef}\n                margin=\"dense\"\n                id=\"password standard-required standard-adornment-password\"\n                type={values.showPassword ? \"text\" : \"password\"}\n                value={values.password}\n                onChange={handleChange(\"password\")}\n                endAdornment={\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      aria-label=\"toggle password visibility\"\n                      onClick={handleClickShowPassword}\n                      onMouseDown={handleMouseDownPassword}\n                    >\n                      {values.showPassword ? <VisibilityOff /> : <Visibility />}\n                    </IconButton>\n                  </InputAdornment>\n                }\n                variant=\"standard\"\n                fullWidth\n              />\n            </FormControl>\n          </Box>\n          {inputError && (\n            <RedTypography variant=\"h7\">\n              The inputted username and password is incorrect.\n            </RedTypography>\n          )}\n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={handleSubmit}>\n            Sign In\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Box>\n  );\n}\n\nexport default LoginPage;\n","import * as React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"@mui/material/Button\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport IconButton from \"@mui/material/IconButton\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport AccountCircle from \"@mui/icons-material/AccountCircle\";\nimport LockIcon from \"@mui/icons-material/Lock\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport Visibility from \"@mui/icons-material/Visibility\";\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Input from \"@mui/material/Input\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport EmailIcon from \"@mui/icons-material/Email\";\n\nimport TextField from \"@mui/material/TextField\";\nimport { Typography, Box } from \"@mui/material\";\n\nconst RedTypography = withStyles({\n  root: {\n    color: \"#DC143C\",\n  },\n})(Typography);\n\nasync function registerUser(credentials) {\n  return fetch(\"/register\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(credentials),\n  }).then((data) => data.json());\n}\n\nasync function loginUser(credentials) {\n  return fetch(\"/login\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(credentials),\n  }).then((data) => data.json());\n}\n\nfunction RegisterPage(props) {\n  const [values, setValues] = React.useState({\n    amount: \"\",\n    password: \"\",\n    weight: \"\",\n    weightRange: \"\",\n    showPassword: false,\n  });\n\n  const handleChange = (prop) => (event) => {\n    setValues({ ...values, [prop]: event.target.value });\n  };\n\n  const handleClickShowPassword = () => {\n    setValues({\n      ...values,\n      showPassword: !values.showPassword,\n    });\n  };\n\n  const handleMouseDownPassword = (event) => {\n    event.preventDefault();\n  };\n\n  const [existsError, setExistsError] = React.useState(false);\n  const [emptyError, setEmptyError] = React.useState(false);\n  const usernameRef = React.useRef();\n  const passwordRef = React.useRef();\n  const emailRef = React.useRef();\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    const u = usernameRef.current.value;\n    const p = passwordRef.current.value;\n    const e = emailRef.current.value;\n\n    const registerData = {\n      u,\n      p,\n      e,\n    };\n\n    const token = await registerUser(registerData);\n    console.log(token.failed);\n    if (token.failed === \"exists\") {\n      setExistsError(true);\n      console.log(\"This user already exists!\");\n    } else if (token.failed === \"empty\") {\n      setEmptyError(true);\n    } else {\n      console.log(\"Registration success!\");\n\n      const loginData = {\n        u,\n        p,\n      };\n\n      const token = await loginUser(loginData);\n      console.log(token.failed);\n      if (token.failed === \"false\") {\n        props.setToken(token);\n        props.handleClose();\n      } else {\n        console.log(\"Error logging in after registration\");\n      }\n    }\n    console.log(registerData);\n  };\n  return (\n    <Box>\n      <Dialog\n        fullWidth\n        maxWidth=\"xs\"\n        onClose={props.handleClose}\n        open={props.registerOpen}\n      >\n        <BootstrapDialogTitle onClose={props.handleClose}>\n          Register\n        </BootstrapDialogTitle>\n        <DialogContent dividers>\n          <Typography gutterBottom>\n            <b>Account Credentials:</b>\n          </Typography>\n          <Box sx={{ display: \"flex\", alignItems: \"flex-end\" }}>\n            <AccountCircle sx={{ color: \"action.active\", mr: 1, my: 0.5 }} />\n            <FormControl fullWidth variant=\"standard\">\n              <InputLabel htmlFor=\"standard-adornment-password\">\n                Username\n              </InputLabel>\n              <Input\n                autoFocus\n                inputRef={usernameRef}\n                margin=\"dense\"\n                id=\"username standard-required input-with-icon-textfield\"\n                label=\"Username\"\n                type=\"text\"\n                fullWidth\n                variant=\"standard\"\n              />\n            </FormControl>\n          </Box>\n          {existsError && !emptyError && (\n            <RedTypography variant=\"h7\">\n              The inputted username is taken.\n            </RedTypography>\n          )}\n          <Box sx={{ display: \"flex\", alignItems: \"flex-end\", mt: 1.5 }}>\n            <EmailIcon sx={{ color: \"action.active\", mr: 1, my: 0.5 }} />\n            <FormControl fullWidth variant=\"standard\">\n              <InputLabel htmlFor=\"standard-adornment-email\">Email</InputLabel>\n              <Input\n                inputRef={emailRef}\n                autoFocus\n                margin=\"dense\"\n                id=\"email standard-required input-with-icon-textfield\"\n                label=\"Email\"\n                type=\"email\"\n                fullWidth\n                variant=\"standard\"\n              />\n            </FormControl>\n          </Box>\n          <Box sx={{ display: \"flex\", alignItems: \"flex-end\", my: 1.5 }}>\n            <LockIcon sx={{ color: \"action.active\", mr: 1, my: 0.5 }} />\n            <FormControl fullWidth variant=\"standard\">\n              <InputLabel htmlFor=\"standard-adornment-password\">\n                Password\n              </InputLabel>\n              <Input\n                autoFocus\n                required\n                inputRef={passwordRef}\n                margin=\"dense\"\n                id=\"password standard-required standard-adornment-password\"\n                type={values.showPassword ? \"text\" : \"password\"}\n                value={values.password}\n                onChange={handleChange(\"password\")}\n                endAdornment={\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      aria-label=\"toggle password visibility\"\n                      onClick={handleClickShowPassword}\n                      onMouseDown={handleMouseDownPassword}\n                    >\n                      {values.showPassword ? <VisibilityOff /> : <Visibility />}\n                    </IconButton>\n                  </InputAdornment>\n                }\n                variant=\"standard\"\n                fullWidth\n              />\n            </FormControl>\n          </Box>\n          {emptyError && (\n            <RedTypography variant=\"h7\">\n              The inputted username and password cannot be blank.\n            </RedTypography>\n          )}\n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={handleSubmit}>\n            Register\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Box>\n  );\n}\n\nconst BootstrapDialogTitle = (props) => {\n  const { children, onClose, ...other } = props;\n\n  return (\n    <DialogTitle sx={{ m: 0, p: 2 }} {...other}>\n      {children}\n      {onClose ? (\n        <IconButton\n          aria-label=\"close\"\n          onClick={onClose}\n          sx={{\n            position: \"absolute\",\n            right: 8,\n            top: 8,\n            color: (theme) => theme.palette.grey[500],\n          }}\n        >\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </DialogTitle>\n  );\n};\n\nBootstrapDialogTitle.propTypes = {\n  children: PropTypes.node,\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default RegisterPage;\n","import * as React from \"react\";\nimport { useState, useEffect } from \"react\";\n\nimport Typography from '@mui/material/Typography';\n\nasync function getUsername() {\n    console.log(\"Within getUsername!\");\n    return fetch(\"/username\", {\n        method: \"GET\",\n    }).then((response) => {\n        return response.json();\n    }).then((data) => {\n        console.log(data.username + \" is our username!\");\n        if (data.failed === \"false\" && data.username) {\n            return data.username;\n        } else {\n            return \"N/A\";\n        }\n    });\n}\n\nfunction GetUsernameComponent(props) {\n    const [data, setData] = useState(null);\n    const [loading, setLoading] = useState(true);\n\n    useEffect(async () => {\n        try {\n            setLoading(true);\n            const data = await getUsername();\n            setData(data);\n            setLoading(false);\n        } catch (error) {\n            setLoading(false);\n            console.log(error);\n        }\n    }, []);\n\n    let updateUsername = props.updateUsername;\n\n    if (loading) {\n        return (\n            <Typography variant=\"h4\">\n                Loading username...\n            </Typography>);\n    }\n\n    if (!data) {\n        return (\n            <Typography variant=\"h4\">\n                Welcome user!\n            </Typography>\n        );\n    }\n\n    return (\n        <Typography variant=\"h4\">\n            Welcome, {data}!\n        </Typography>\n    );\n\n\n}\n\nexport default GetUsernameComponent;","import * as React from \"react\";\nimport { Link } from 'react-router-dom';\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\n\nimport Button from \"@mui/material/Button\";\nimport Container from '@mui/material/Container';\nimport Typography from '@mui/material/Typography';\nimport { Card, CardContent } from \"@mui/material\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport TextField from '@mui/material/TextField';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\n\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport Visibility from \"@mui/icons-material/Visibility\";\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\n\nimport GetUsernameComponent from './GetUsernameComponent'\n\nconst theme = createTheme({\n    palette: {\n        primary: {\n            main: \"#DC143C\",\n        },\n    },\n});\n\nconst RedTypography = withStyles({\n    root: {\n        color: \"#DC143C\",\n    },\n})(Typography);\n\nasync function changePasswordRequest(credentials) {\n    return fetch(\"/changePassword\", {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(credentials),\n    }).then((response) => {\n        return response.json();\n    }).then((data) => {\n        //alert(\"Changed password!\");\n    });\n}\n\nfunction getUsername() {\n    console.log(\"Within getUsername!\");\n    fetch(\"/username\", {\n        method: \"GET\",\n    }).then((response) => {\n        return response.json();\n    }).then((data) => {\n        console.log(data.username + \" is our username!\");\n        if (data.failed === \"false\" && data.username) {\n            return data.username;\n        } else {\n            return \"N/A\";\n        }\n    });\n}\n\n\nclass MyAccountPage extends React.Component {\n\n   \n    constructor(props) {\n        super(props);\n        this.passwordInput = React.createRef('');\n    }\n\n    changePassword = (event) => {\n        event.preventDefault();\n        console.log(\"Changing password in changePassword!\")\n        const data = new FormData(event.currentTarget);\n        const password = data.get('newPassword');\n        if (password.trim() === \"\") {\n            this.setState({\n                success: false,\n                emptyPassword: true\n            })\n        } else {\n            const credentials = {\n                newPassword: password\n            }\n            changePasswordRequest(credentials);\n            this.passwordInput.current.value = null;\n            this.setState({\n                success: true,\n                emptyPassword: false\n            })\n        }\n    };\n\n    render() {\n        return (\n            <ThemeProvider theme={theme}>\n                <Container component=\"main\">\n                    <Grid container spacing={0}\n                        sx={{ my: 2 }}\n                        direction=\"column\"\n                        alignItems=\"center\"\n                        justifyContent=\"center\">\n                        <GetUsernameComponent>\n                        </GetUsernameComponent>\n                    </Grid>\n\n                    <Grid container spacing={0}\n                        direction=\"column\"\n                        alignItems=\"center\"\n                        justifyContent=\"center\">\n                        <Card sx={{ height: \"100%\", display: \"flex\", flexDirection: \"row\", boxShadow: 3 }}>\n                            <CardContent sx={{ flexGrow: 1 }}>\n                                <Box component=\"form\" noValidate onSubmit={this.changePassword} sx={{ mx: 12, my: 4 }}>\n                                    <Typography variant=\"h5\" mb={2} textAlign=\"center\">\n                                        Change Password\n                                    </Typography>\n                                    <Grid container spacing={2} direction=\"column\"\n                                        >\n                                        <Grid item>\n                                            <TextField\n                                                name=\"newPassword\"\n                                                required\n                                                type=\"password\"\n                                                fullWidth\n                                                id=\"newPassword\"\n                                                label=\"Enter your new password\"\n                                                autoFocus\n                                                inputRef={this.passwordInput}\n                                            />\n                                        </Grid>\n                                    </Grid>\n                                    {this.state && this.state.success && (\n                                        <Grid container spacing={0} sx={{ mt: 2 }} direction=\"column\"\n                                            alignItems=\"center\"\n                                            justifyContent=\"center\">\n                                            <RedTypography variant=\"h8\">\n                                                Password changed!\n                                            </RedTypography>\n                                        </Grid>\n                                    )\n                                    }\n                                    {this.state && this.state.emptyPassword && (\n                                        <Grid container spacing={0} sx={{ mt: 2 }} direction=\"column\"\n                                            alignItems=\"center\"\n                                            justifyContent=\"center\">\n                                            <RedTypography variant=\"h8\">\n                                                Password cannot be blank!\n                                            </RedTypography>\n                                        </Grid>\n                                    )\n                                    }\n                                    <Button\n                                        type=\"submit\"\n                                        fullWidth\n                                        variant=\"contained\"\n                                        sx={{ mt: 3, mb: 2 }}\n                                    >\n                                        Change Password\n                                    </Button>\n                                </Box>\n                            </CardContent>\n                        </Card>\n                    </Grid>\n                    <Grid container spacing={0}\n                        sx={{ my: 2 }}\n                        direction=\"column\"\n                        alignItems=\"center\"\n                        justifyContent=\"center\">\n                        <Button component={Link} to=\"/\">Return To Main Page</Button>\n                    </Grid>\n                </Container>\n            </ThemeProvider >\n        );\n    }\n}\n\nexport default MyAccountPage;","import \"./App.css\";\nimport * as React from \"react\";\nimport { useState, useEffect } from \"react\";\n\nimport Layout from \"./components/layout/Layout\";\n\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport BuildingList from \"./components/BuildingInformation/BuildingList\";\n\nimport { Route, Switch } from \"react-router-dom\";\nimport WelcomeMessage from \"./components/WelcomeMessage\";\nimport LoginPage from \"./modals/LoginPage\";\nimport RegisterPage from \"./modals/RegisterPage\";\n\nimport useToken from \"./store/loginStore\";\nimport ContactsContext from \"./store/favoriteContext\";\n\nimport { ContactsContextProvider } from \"./store/favoriteContext\";\n\nimport MyAccountPage from './modals/MyAccountPage'\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: \"#DC143C\",\n    },\n  },\n});\n\nfunction App() {\n  const [alignment, setAlignment] = React.useState(\"All\");\n\n  const { token, setToken } = useToken();\n\n  const [laundryData, setData] = React.useState([]);\n\n  const [timestampData, setTimestampData] = React.useState([]);\n\n  const [openLogin, setOpenLogin] = React.useState(false);\n  const [openRegister, setOpenRegister] = React.useState(false);\n\n  const [showFavorites, setShowFavorites] = React.useState(false);\n\n  const [time, setTime] = React.useState(Date.now());\n\n  React.useEffect(() => {\n    const interval = setInterval(() => setTime(Date.now()), 120000);\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n\n  React.useEffect(() => {\n    fetch(\"/laundry\", {\n      method: \"GET\",\n    })\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        data.splice(data.length - 1);\n        setData(data);\n        console.log(data);\n      });\n  }, [time]);\n\n  React.useEffect(() => {\n    fetch(\"/timestamp\", {\n      method: \"GET\",\n    })\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        setTimestampData(data);\n        console.log(data);\n      });\n  }, [time]);\n\n  async function logoutUser() {\n    console.log(\"Within logout...\");\n    return fetch(\"/logout\", {\n      method: \"GET\",\n    }).then((data) => {\n      console.log(\"Logged out successfully!\");\n      console.log(alignment);\n      setAlignment(\"All\");\n      setShowFavorites(false);\n      setToken(null);\n    });\n  }\n\n  const handleClickOpenLogin = () => {\n    setOpenLogin(true);\n  };\n  const handleClickOpenLogout = async () => {\n    const result = await logoutUser();\n    console.log(\"Logging out user!\" + result);\n  };\n  const handleClickRegister = () => {\n    setOpenRegister(true);\n  };\n  const handleClose = () => {\n    setOpenLogin(false);\n    setOpenRegister(false);\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Layout\n        handleRegister={handleClickRegister}\n        handleLogin={handleClickOpenLogin}\n        handleLogout={handleClickOpenLogout}\n        loggedIn={token}\n      >\n        {openLogin && (\n          <LoginPage\n            loginOpen={openLogin}\n            setToken={setToken}\n            handleClose={handleClose}\n            handleFavorite={setShowFavorites}\n            favoriteButton={setAlignment}\n          />\n        )}\n        {openRegister && (\n          <RegisterPage\n            registerOpen={openRegister}\n            setToken={setToken}\n            handleClose={handleClose}\n          />\n        )}\n\n        <Switch>\n          <Route path=\"/\" exact={true}>\n            {token && (\n              <ContactsContextProvider>\n                <WelcomeMessage\n                  setFavorites={setShowFavorites}\n                  timestamp={timestampData}\n                  loggedIn={token}\n                  alignment={alignment}\n                  setAlignment={setAlignment}\n                />\n                <BuildingList\n                  data={laundryData}\n                  showFavorites={showFavorites}\n                />\n              </ContactsContextProvider>\n            )}\n            {!token && (\n              <div>\n                <WelcomeMessage\n                  setFavorites={setShowFavorites}\n                  timestamp={timestampData}\n                  loggedIn={token}\n                  alignment={alignment}\n                  setAlignment={setAlignment}\n                />\n                <BuildingList\n                  data={laundryData}\n                  showFavorites={showFavorites}\n                />\n              </div>\n            )}\n          </Route>\n\n          <Route path=\"/myAccount\">\n            {token && (\n              <MyAccountPage username={token.username}></MyAccountPage>\n            )}\n          </Route>\n        </Switch>\n      </Layout>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { useState } from \"react\";\n\nexport default function useToken() {\n  const getToken = () => {\n    const tokenString = sessionStorage.getItem(\"token\");\n    const userToken = JSON.parse(tokenString);\n    return userToken?.failed;\n  };\n  const [token, setToken] = useState(getToken());\n\n  const saveToken = (userToken) => {\n    sessionStorage.setItem(\"token\", JSON.stringify(userToken));\n    setToken(userToken);\n  };\n\n  return {\n    setToken: saveToken,\n    token,\n  };\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}